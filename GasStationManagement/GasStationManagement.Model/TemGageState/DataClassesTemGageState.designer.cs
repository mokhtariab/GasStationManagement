#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GasStationManagement.Model.TemGageState
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GasStationManagement")]
	public partial class DataClassesTemGageStateDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_TemGageState(TBL_TemGageState instance);
    partial void UpdateTBL_TemGageState(TBL_TemGageState instance);
    partial void DeleteTBL_TemGageState(TBL_TemGageState instance);
    #endregion
		
		public DataClassesTemGageStateDataContext() : 
				base(global::GasStationManagement.Model.Properties.Settings.Default.GasStationManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTemGageStateDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTemGageStateDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTemGageStateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTemGageStateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_TemGageState> TBL_TemGageStates
		{
			get
			{
				return this.GetTable<TBL_TemGageState>();
			}
		}
		
		public System.Data.Linq.Table<VW_TemGageState> VW_TemGageStates
		{
			get
			{
				return this.GetTable<VW_TemGageState>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_TemGageStateDelete")]
		public int SP_TemGageStateDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGage_Id", DbType="Int")] System.Nullable<int> temGage_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageSerialNo", DbType="VarChar(20)")] string temGageSerialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageStateRow", DbType="Int")] System.Nullable<int> temGageStateRow, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), temGage_Id, temGageSerialNo, temGageStateRow, msgRet);
			msgRet = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_TemGageStateInsert")]
		public int SP_TemGageStateInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGage_Id", DbType="Int")] System.Nullable<int> temGage_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageSerialNo", DbType="VarChar(20)")] string temGageSerialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageStateRow", DbType="Int")] System.Nullable<int> temGageStateRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeStateDate", DbType="VarChar(10)")] string changeStateDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquipmentState_Id", DbType="SmallInt")] System.Nullable<short> equipmentState_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Store_Id", DbType="SmallInt")] System.Nullable<short> store_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkShop_Id", DbType="SmallInt")] System.Nullable<short> workShop_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Calibration_Id", DbType="SmallInt")] System.Nullable<short> calibration_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GasStation_Id", DbType="SmallInt")] System.Nullable<short> gasStation_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), temGage_Id, temGageSerialNo, temGageStateRow, changeStateDate, equipmentState_Id, store_Id, workShop_Id, calibration_Id, gasStation_Id, description, isActive, msgRet);
			msgRet = ((string)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_TemGageStateUpdate")]
		public int SP_TemGageStateUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGage_Id", DbType="Int")] System.Nullable<int> temGage_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageSerialNo", DbType="VarChar(20)")] string temGageSerialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TemGageStateRow", DbType="Int")] System.Nullable<int> temGageStateRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeStateDate", DbType="VarChar(10)")] string changeStateDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EquipmentState_Id", DbType="SmallInt")] System.Nullable<short> equipmentState_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Store_Id", DbType="SmallInt")] System.Nullable<short> store_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WorkShop_Id", DbType="SmallInt")] System.Nullable<short> workShop_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Calibration_Id", DbType="SmallInt")] System.Nullable<short> calibration_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GasStation_Id", DbType="SmallInt")] System.Nullable<short> gasStation_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), temGage_Id, temGageSerialNo, temGageStateRow, changeStateDate, equipmentState_Id, store_Id, workShop_Id, calibration_Id, gasStation_Id, description, isActive, msgRet);
			msgRet = ((string)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_TemGageState")]
	public partial class TBL_TemGageState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TemGage_Id;
		
		private string _TemGageSerialNo;
		
		private int _TemGageStateRow;
		
		private string _ChangeStateDate;
		
		private short _EquipmentState_Id;
		
		private System.Nullable<short> _Store_Id;
		
		private System.Nullable<short> _WorkShop_Id;
		
		private System.Nullable<short> _Calibration_Id;
		
		private System.Nullable<short> _GasStation_Id;
		
		private string _Description;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTemGage_IdChanging(int value);
    partial void OnTemGage_IdChanged();
    partial void OnTemGageSerialNoChanging(string value);
    partial void OnTemGageSerialNoChanged();
    partial void OnTemGageStateRowChanging(int value);
    partial void OnTemGageStateRowChanged();
    partial void OnChangeStateDateChanging(string value);
    partial void OnChangeStateDateChanged();
    partial void OnEquipmentState_IdChanging(short value);
    partial void OnEquipmentState_IdChanged();
    partial void OnStore_IdChanging(System.Nullable<short> value);
    partial void OnStore_IdChanged();
    partial void OnWorkShop_IdChanging(System.Nullable<short> value);
    partial void OnWorkShop_IdChanged();
    partial void OnCalibration_IdChanging(System.Nullable<short> value);
    partial void OnCalibration_IdChanged();
    partial void OnGasStation_IdChanging(System.Nullable<short> value);
    partial void OnGasStation_IdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public TBL_TemGageState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGage_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TemGage_Id
		{
			get
			{
				return this._TemGage_Id;
			}
			set
			{
				if ((this._TemGage_Id != value))
				{
					this.OnTemGage_IdChanging(value);
					this.SendPropertyChanging();
					this._TemGage_Id = value;
					this.SendPropertyChanged("TemGage_Id");
					this.OnTemGage_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGageSerialNo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TemGageSerialNo
		{
			get
			{
				return this._TemGageSerialNo;
			}
			set
			{
				if ((this._TemGageSerialNo != value))
				{
					this.OnTemGageSerialNoChanging(value);
					this.SendPropertyChanging();
					this._TemGageSerialNo = value;
					this.SendPropertyChanged("TemGageSerialNo");
					this.OnTemGageSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGageStateRow", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TemGageStateRow
		{
			get
			{
				return this._TemGageStateRow;
			}
			set
			{
				if ((this._TemGageStateRow != value))
				{
					this.OnTemGageStateRowChanging(value);
					this.SendPropertyChanging();
					this._TemGageStateRow = value;
					this.SendPropertyChanged("TemGageStateRow");
					this.OnTemGageStateRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeStateDate", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ChangeStateDate
		{
			get
			{
				return this._ChangeStateDate;
			}
			set
			{
				if ((this._ChangeStateDate != value))
				{
					this.OnChangeStateDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeStateDate = value;
					this.SendPropertyChanged("ChangeStateDate");
					this.OnChangeStateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentState_Id", DbType="SmallInt NOT NULL")]
		public short EquipmentState_Id
		{
			get
			{
				return this._EquipmentState_Id;
			}
			set
			{
				if ((this._EquipmentState_Id != value))
				{
					this.OnEquipmentState_IdChanging(value);
					this.SendPropertyChanging();
					this._EquipmentState_Id = value;
					this.SendPropertyChanged("EquipmentState_Id");
					this.OnEquipmentState_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_Id", DbType="SmallInt")]
		public System.Nullable<short> Store_Id
		{
			get
			{
				return this._Store_Id;
			}
			set
			{
				if ((this._Store_Id != value))
				{
					this.OnStore_IdChanging(value);
					this.SendPropertyChanging();
					this._Store_Id = value;
					this.SendPropertyChanged("Store_Id");
					this.OnStore_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkShop_Id", DbType="SmallInt")]
		public System.Nullable<short> WorkShop_Id
		{
			get
			{
				return this._WorkShop_Id;
			}
			set
			{
				if ((this._WorkShop_Id != value))
				{
					this.OnWorkShop_IdChanging(value);
					this.SendPropertyChanging();
					this._WorkShop_Id = value;
					this.SendPropertyChanged("WorkShop_Id");
					this.OnWorkShop_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calibration_Id", DbType="SmallInt")]
		public System.Nullable<short> Calibration_Id
		{
			get
			{
				return this._Calibration_Id;
			}
			set
			{
				if ((this._Calibration_Id != value))
				{
					this.OnCalibration_IdChanging(value);
					this.SendPropertyChanging();
					this._Calibration_Id = value;
					this.SendPropertyChanged("Calibration_Id");
					this.OnCalibration_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasStation_Id", DbType="SmallInt")]
		public System.Nullable<short> GasStation_Id
		{
			get
			{
				return this._GasStation_Id;
			}
			set
			{
				if ((this._GasStation_Id != value))
				{
					this.OnGasStation_IdChanging(value);
					this.SendPropertyChanging();
					this._GasStation_Id = value;
					this.SendPropertyChanged("GasStation_Id");
					this.OnGasStation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_TemGageState")]
	public partial class VW_TemGageState
	{
		
		private int _TemGage_Id;
		
		private string _TemGageSerialNo;
		
		private int _TemGageStateRow;
		
		private string _ChangeStateDate;
		
		private short _EquipmentState_Id;
		
		private string _EquipmentStateName;
		
		private short _Store_Id;
		
		private string _StoreName;
		
		private short _WorkShop_Id;
		
		private string _WorkShopName;
		
		private short _Calibration_Id;
		
		private string _CalibrationName;
		
		private int _GasStation_Id;
		
		private string _GasStationCode;
		
		private string _GasStationName;
		
		private string _Description;
		
		private bool _IsActive;
		
		private string _Brand;
		
		private double _GageSize;
		
		private double _PacketLength;
		
		private int _TMin;
		
		private int _TMax;
		
		private int _CalibrationDuration;
		
		public VW_TemGageState()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGage_Id", DbType="Int NOT NULL")]
		public int TemGage_Id
		{
			get
			{
				return this._TemGage_Id;
			}
			set
			{
				if ((this._TemGage_Id != value))
				{
					this._TemGage_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGageSerialNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TemGageSerialNo
		{
			get
			{
				return this._TemGageSerialNo;
			}
			set
			{
				if ((this._TemGageSerialNo != value))
				{
					this._TemGageSerialNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemGageStateRow", DbType="Int NOT NULL")]
		public int TemGageStateRow
		{
			get
			{
				return this._TemGageStateRow;
			}
			set
			{
				if ((this._TemGageStateRow != value))
				{
					this._TemGageStateRow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeStateDate", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ChangeStateDate
		{
			get
			{
				return this._ChangeStateDate;
			}
			set
			{
				if ((this._ChangeStateDate != value))
				{
					this._ChangeStateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentState_Id", DbType="SmallInt NOT NULL")]
		public short EquipmentState_Id
		{
			get
			{
				return this._EquipmentState_Id;
			}
			set
			{
				if ((this._EquipmentState_Id != value))
				{
					this._EquipmentState_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentStateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EquipmentStateName
		{
			get
			{
				return this._EquipmentStateName;
			}
			set
			{
				if ((this._EquipmentStateName != value))
				{
					this._EquipmentStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_Id", DbType="SmallInt NOT NULL")]
		public short Store_Id
		{
			get
			{
				return this._Store_Id;
			}
			set
			{
				if ((this._Store_Id != value))
				{
					this._Store_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this._StoreName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkShop_Id", DbType="SmallInt NOT NULL")]
		public short WorkShop_Id
		{
			get
			{
				return this._WorkShop_Id;
			}
			set
			{
				if ((this._WorkShop_Id != value))
				{
					this._WorkShop_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkShopName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkShopName
		{
			get
			{
				return this._WorkShopName;
			}
			set
			{
				if ((this._WorkShopName != value))
				{
					this._WorkShopName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calibration_Id", DbType="SmallInt NOT NULL")]
		public short Calibration_Id
		{
			get
			{
				return this._Calibration_Id;
			}
			set
			{
				if ((this._Calibration_Id != value))
				{
					this._Calibration_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CalibrationName
		{
			get
			{
				return this._CalibrationName;
			}
			set
			{
				if ((this._CalibrationName != value))
				{
					this._CalibrationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasStation_Id", DbType="Int NOT NULL")]
		public int GasStation_Id
		{
			get
			{
				return this._GasStation_Id;
			}
			set
			{
				if ((this._GasStation_Id != value))
				{
					this._GasStation_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasStationCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string GasStationCode
		{
			get
			{
				return this._GasStationCode;
			}
			set
			{
				if ((this._GasStationCode != value))
				{
					this._GasStationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasStationName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string GasStationName
		{
			get
			{
				return this._GasStationName;
			}
			set
			{
				if ((this._GasStationName != value))
				{
					this._GasStationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GageSize", DbType="Float NOT NULL")]
		public double GageSize
		{
			get
			{
				return this._GageSize;
			}
			set
			{
				if ((this._GageSize != value))
				{
					this._GageSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacketLength", DbType="Float NOT NULL")]
		public double PacketLength
		{
			get
			{
				return this._PacketLength;
			}
			set
			{
				if ((this._PacketLength != value))
				{
					this._PacketLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMin", DbType="Int NOT NULL")]
		public int TMin
		{
			get
			{
				return this._TMin;
			}
			set
			{
				if ((this._TMin != value))
				{
					this._TMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TMax", DbType="Int NOT NULL")]
		public int TMax
		{
			get
			{
				return this._TMax;
			}
			set
			{
				if ((this._TMax != value))
				{
					this._TMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalibrationDuration", DbType="Int NOT NULL")]
		public int CalibrationDuration
		{
			get
			{
				return this._CalibrationDuration;
			}
			set
			{
				if ((this._CalibrationDuration != value))
				{
					this._CalibrationDuration = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
