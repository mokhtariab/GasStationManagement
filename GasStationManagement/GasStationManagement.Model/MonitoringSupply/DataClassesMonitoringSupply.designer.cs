#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GasStationManagement.Model.MonitoringSupply
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GasStationManagement")]
	public partial class DataClassesMonitoringSupplyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_MonitoringSupply(TBL_MonitoringSupply instance);
    partial void UpdateTBL_MonitoringSupply(TBL_MonitoringSupply instance);
    partial void DeleteTBL_MonitoringSupply(TBL_MonitoringSupply instance);
    #endregion
		
		public DataClassesMonitoringSupplyDataContext() : 
				base(global::GasStationManagement.Model.Properties.Settings.Default.GasStationManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMonitoringSupplyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMonitoringSupplyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMonitoringSupplyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesMonitoringSupplyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_MonitoringSupply> TBL_MonitoringSupplies
		{
			get
			{
				return this.GetTable<TBL_MonitoringSupply>();
			}
		}
		
		public System.Data.Linq.Table<VW_MonitoringSupply> VW_MonitoringSupplies
		{
			get
			{
				return this.GetTable<VW_MonitoringSupply>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_MonitoringSupplyDelete")]
		public int SP_MonitoringSupplyDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Monitoring_Id", DbType="Int")] System.Nullable<int> monitoring_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), monitoring_Id, msgRet);
			msgRet = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_MonitoringSupplyInsert")]
		public int SP_MonitoringSupplyInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Monitoring_Id", DbType="Int")] System.Nullable<int> monitoring_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MonitoringSerialNo", DbType="VarChar(50)")] string monitoringSerialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialVc", DbType="VarChar(50)")] string initialVc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplyDate", DbType="VarChar(10)")] string supplyDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="BigInt")] System.Nullable<long> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suppliers_Id", DbType="SmallInt")] System.Nullable<short> suppliers_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), monitoring_Id, monitoringSerialNo, initialVc, supplyDate, price, suppliers_Id, description, isActive, msgRet);
			msgRet = ((string)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_MonitoringSupplyUpdate")]
		public int SP_MonitoringSupplyUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Monitoring_Id", DbType="Int")] System.Nullable<int> monitoring_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MonitoringSerialNo", DbType="VarChar(50)")] string monitoringSerialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InitialVc", DbType="VarChar(50)")] string initialVc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplyDate", DbType="VarChar(10)")] string supplyDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="BigInt")] System.Nullable<long> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Suppliers_Id", DbType="SmallInt")] System.Nullable<short> suppliers_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), monitoring_Id, monitoringSerialNo, initialVc, supplyDate, price, suppliers_Id, description, isActive, msgRet);
			msgRet = ((string)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_MonitoringSupply")]
	public partial class TBL_MonitoringSupply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Monitoring_Id;
		
		private string _MonitoringSerialNo;
		
		private string _InitialVc;
		
		private string _SupplyDate;
		
		private System.Nullable<long> _Price;
		
		private short _Suppliers_Id;
		
		private string _Description;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonitoring_IdChanging(int value);
    partial void OnMonitoring_IdChanged();
    partial void OnMonitoringSerialNoChanging(string value);
    partial void OnMonitoringSerialNoChanged();
    partial void OnInitialVcChanging(string value);
    partial void OnInitialVcChanged();
    partial void OnSupplyDateChanging(string value);
    partial void OnSupplyDateChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnSuppliers_IdChanging(short value);
    partial void OnSuppliers_IdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public TBL_MonitoringSupply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monitoring_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Monitoring_Id
		{
			get
			{
				return this._Monitoring_Id;
			}
			set
			{
				if ((this._Monitoring_Id != value))
				{
					this.OnMonitoring_IdChanging(value);
					this.SendPropertyChanging();
					this._Monitoring_Id = value;
					this.SendPropertyChanged("Monitoring_Id");
					this.OnMonitoring_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitoringSerialNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MonitoringSerialNo
		{
			get
			{
				return this._MonitoringSerialNo;
			}
			set
			{
				if ((this._MonitoringSerialNo != value))
				{
					this.OnMonitoringSerialNoChanging(value);
					this.SendPropertyChanging();
					this._MonitoringSerialNo = value;
					this.SendPropertyChanged("MonitoringSerialNo");
					this.OnMonitoringSerialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialVc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InitialVc
		{
			get
			{
				return this._InitialVc;
			}
			set
			{
				if ((this._InitialVc != value))
				{
					this.OnInitialVcChanging(value);
					this.SendPropertyChanging();
					this._InitialVc = value;
					this.SendPropertyChanged("InitialVc");
					this.OnInitialVcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplyDate", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SupplyDate
		{
			get
			{
				return this._SupplyDate;
			}
			set
			{
				if ((this._SupplyDate != value))
				{
					this.OnSupplyDateChanging(value);
					this.SendPropertyChanging();
					this._SupplyDate = value;
					this.SendPropertyChanged("SupplyDate");
					this.OnSupplyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suppliers_Id", DbType="SmallInt NOT NULL")]
		public short Suppliers_Id
		{
			get
			{
				return this._Suppliers_Id;
			}
			set
			{
				if ((this._Suppliers_Id != value))
				{
					this.OnSuppliers_IdChanging(value);
					this.SendPropertyChanging();
					this._Suppliers_Id = value;
					this.SendPropertyChanged("Suppliers_Id");
					this.OnSuppliers_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_MonitoringSupply")]
	public partial class VW_MonitoringSupply
	{
		
		private int _Monitoring_Id;
		
		private string _MonitoringSerialNo;
		
		private string _InitialVc;
		
		private string _SupplyDate;
		
		private System.Nullable<long> _Price;
		
		private short _Suppliers_Id;
		
		private string _Description;
		
		private bool _IsActive;
		
		public VW_MonitoringSupply()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monitoring_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Monitoring_Id
		{
			get
			{
				return this._Monitoring_Id;
			}
			set
			{
				if ((this._Monitoring_Id != value))
				{
					this._Monitoring_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitoringSerialNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MonitoringSerialNo
		{
			get
			{
				return this._MonitoringSerialNo;
			}
			set
			{
				if ((this._MonitoringSerialNo != value))
				{
					this._MonitoringSerialNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialVc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InitialVc
		{
			get
			{
				return this._InitialVc;
			}
			set
			{
				if ((this._InitialVc != value))
				{
					this._InitialVc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplyDate", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SupplyDate
		{
			get
			{
				return this._SupplyDate;
			}
			set
			{
				if ((this._SupplyDate != value))
				{
					this._SupplyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suppliers_Id", DbType="SmallInt NOT NULL")]
		public short Suppliers_Id
		{
			get
			{
				return this._Suppliers_Id;
			}
			set
			{
				if ((this._Suppliers_Id != value))
				{
					this._Suppliers_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
